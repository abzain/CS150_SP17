#BlueJ class context
comment0.params=
comment0.target=LinkedListIntegerContainer_trial()
comment0.text=\r\n\ Default\ Constructor\ for\ objects\ of\ class\ LinkedListIntegerContainer\r\n
comment1.params=obj
comment1.target=LinkedListIntegerContainer_trial(LinkedListIntegerContainer)
comment1.text=\r\n\ Copy\ Constructor\ for\ objects\ of\ class\ LinkedListIntegerContainer\r\n
comment2.params=input
comment2.target=void\ addToFront(java.lang.Integer)
comment2.text=\r\n\ addToFront\ method\ -\ API\ void\ add(int\ index,\ E\ element)\ inserts\ \r\n\ specified\ element\ at\ the\ specified\ position\ in\ this\ list\ \r\n
comment3.params=input
comment3.target=void\ addToBack(java.lang.Integer)
comment3.text=\r\n\ addToBack\ method\ -\ API\ boolean\ add(E\ e)\ appends\ specified\ \r\n\ element\ to\ end\ of\ list\r\n
comment4.params=input
comment4.target=void\ addSorted(java.lang.Integer)
comment4.text=\r\n\ addSorted\ method\ -\ inserts\ element\ to\ the\ correct\ position\r\n\ in\ the\ list\ that\ would\ keep\ the\ array\ sorted\r\n
comment5.params=
comment5.target=void\ insertionSort()
comment5.text=\r\n\ insertionSort\ method\ -\ sorts\ AbstractList\ using\ insertion\ sort\ (p.354)\r\n
comment6.params=input
comment6.target=int\ linearSearch(java.lang.Integer)
comment6.text=\r\n\ linear\ search\ method\ -\ search\ list\ for\ specific\ number\ (assuming\ \r\n\ abstract\ list\ is\ sorted.\ So\ call\ sort\ method\ on\ data\ and\ then\ find\ element)\r\n\ \r\n\ return\ element\ index\r\n
comment7.params=input
comment7.target=int\ binarySearch(java.lang.Integer)
comment7.text=\r\n\ binary\ search\ method\ -\ search\ list\ for\ specific\ number\ (assuming\ \r\n\ abstract\ list\ is\ sorted.\ So\ call\ sort\ method\ on\ data\ and\ then\ find\ element)\r\n\ \r\n\ return\ element\ index\r\n\ \r\n\ Algorithm\ -\ 3-way\ comparison\ of\ low,\ high\ and\ mid.\ \r\n\ (adapted\ from\ fig.5.11\ on\ textbook)\r\n
comment8.params=
comment8.target=java.lang.Integer[]\ getArray()
comment8.text=\r\n\ return\ an\ integer\ array\ whose\ entries\ are\ equal\ to\ the\ abstractlist\ -\ \r\n\ AbstractList\ converted\ to\ array\ \r\n
numComments=9
