#BlueJ class context
comment0.params=
comment0.target=HashSetPhoneBase()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ HashSetPhoneBase\r\n
comment1.params=n
comment1.target=boolean\ add(long)
comment1.text=\r\n\ Implementation\ of\ abstract\ method\ adds\ a\ phone\ number\ \r\n\ @param\ \ n\ \ \ \ phone\ number\ to\ be\ added\r\n\ @return\ \ \ \ \ \ true\ if\ added\ without\ duplicate,\ false\ otherwise\r\n
comment2.params=k
comment2.target=long\ select(int)
comment2.text=\r\n\ Implementation\ of\ abstract\ method\ select\ the\ kth\ smallest\ phone\ number\r\n\ @param\ \ k\ \ \ \ index\ of\ a\ given\ stored\ phone\ number\r\n\ @return\ \ \ \ \ \ the\ kth\ smallest\ phone\ number\ \r\n
comment3.params=phoneNumArray
comment3.target=void\ quickSelect(java.lang.Long[])
comment3.text=\r\n\ Internal\ selection\ method\ that\ makes\ recursive\ calls.\r\n\ Uses\ median-of-three\ partitioning\ and\ a\ cutoff.\r\n\ Places\ the\ kth\ smallest\ item\ in\ a[k-1].\r\n\ @param\ phoneNumArray\ an\ array\ of\ Comparable\ items.\r\n
comment4.params=phoneNumArray\ lowerIndex\ higherIndex
comment4.target=void\ quickSort(java.lang.Long[],\ int,\ int)
comment4.text=\r\n\ Recursive\ Internal\ quickselect\ method\r\n\ @param\ lowerIndex\ the\ lowest\ array\ index\r\n\ @param\ higherIndex\ the\ highest\ array\ index\r\n
comment5.params=i\ j
comment5.target=void\ exchangeNumbers(int,\ int)
comment5.text=\r\n\ Swap\ method\ for\ the\ recursive\ quickselect\ method\r\n\ @param\ i\ a\ left\ index\ of\ array\r\n\ @param\ j\ a\ right\ index\ of\ array\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Method\ to\ represent\ hashset\ as\ string\r\n
numComments=7
