#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment0.text=\r\n\ static\ main\ method\r\n
comment1.params=s\ p\ c\ lamda\ r
comment1.target=testSim(int,\ double,\ double,\ double,\ double)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ testSim\r\n
comment2.params=
comment2.target=void\ runSim()
comment2.text=\r\n\ Run\ the\ simulation\ until\ stopping\ time\ occurs\r\n
comment3.params=lamda
comment3.target=void\ nextArrival(double)
comment3.text=\r\n\ Add\ an\ arrival\ to\ eventSet\ at\ the\ current\ time,\r\n\ and\ schedule\ one\ for\ arriveTime\ in\ future.\r\n\ \r\n\ Place\ a\ new\ ARRIVE\ event\ into\ the\ event\ queue.\r\n\ Then\ advance\ the\ time\ when\ next\ ARRIVE\ event\ will\ occur.\r\n\ ArriveTime\ follows\ a\ poisson\ distribution\r\n
comment4.params=p\ s\ c
comment4.target=double\ netProfit(double,\ int,\ double)
comment4.text=\r\n\ Net\ profit\ method\r\n\ @param\ -\ profit\ of\ serving\ each\ customer\ is\ p\ dollars\r\n
comment5.params=s\ c
comment5.target=double\ cashierCost(int,\ double)
comment5.text=\r\n\ Total\ cashier\ cost\ method\r\n\ @param\ -\ cost\ of\ employing\ cashiers\r\n
comment6.params=p
comment6.target=double\ totalProfit(double)
comment6.text=\r\n\ Total\ profit\ method\r\n\ @param\ -\ total\ profit\ for\ the\ day\r\n
comment7.params=s
comment7.target=int\ turnAway(int)
comment7.text=\r\n\ Method\ to\ calculate\ total\ number\ of\ customers\ turned\ away\r\n\ @param\ -\ custNo\ turned\ away\r\n
numComments=8
