#BlueJ class context
comment0.params=input
comment0.target=boolean\ insert(java.lang.Object)
comment0.text=\r\n\ return\ -\ true\ if\ inserted\ without\ duplicates,\r\n\ false\ otherwise\r\n
comment1.params=input
comment1.target=boolean\ contains(java.lang.Object)
comment1.text=\r\n\ return\ -\ true\ if\ tree\ contains\ key\ (input),\r\n\ false\ otherwise\r\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment10.text=\r\n\ return\ -\ true\ if\ there\ are\ no\ items\r\n\ in\ the\ tree,\ false\ otherwise\r\n
comment2.params=
comment2.target=int\ size()
comment2.text=\r\n\ return\ -\ total\ number\ of\ items\ in\ tree\r\n
comment3.params=input
comment3.target=boolean\ remove(java.lang.Object)
comment3.text=\r\n\ return\ -\ true\ if\ removes\ specified\ input\ from\r\n\ tree\ if\ present,\ false\ otherwise\r\n\ Also\ implements\ removal\ of\ the\ min\ item\ \r\n\ from\ subtree\r\n
comment4.params=
comment4.target=java.lang.Object\ findMax()
comment4.text=\r\n\ return\ -\ largest\ item\ from\ tree\r\n
comment5.params=
comment5.target=java.lang.Object\ findMin()
comment5.text=\r\n\ return\ -\ smallest\ item\ from\ tree\r\n
comment6.params=
comment6.target=void\ printPreOrder()
comment6.text=\r\n\ prints\ tree\ using\ preorder\ transversal\r\n
comment7.params=
comment7.target=void\ printPostOrder()
comment7.text=\r\n\ prints\ tree\ using\ postorder\ transversal\r\n
comment8.params=
comment8.target=void\ printInOrder()
comment8.text=\r\n\ prints\ tree\ using\ inorder\ transversal\r\n
comment9.params=
comment9.target=void\ empty()
comment9.text=\r\n\ removes\ all\ items\ from\ the\ tree\r\n
numComments=11
